plugins {
    id 'java'
}

group = 'kro.kr.tbell'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Appium
    testImplementation 'io.appium:java-client:9.2.2'
    implementation 'io.appium:java-client:9.2.2'

    // Cucumber
    implementation 'io.cucumber:cucumber-java:7.4.1'
    implementation 'io.cucumber:cucumber-junit:7.4.1'
    testImplementation 'io.cucumber:cucumber-junit:7.4.1'
    testImplementation 'io.cucumber:cucumber-java:7.4.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    //SLF4J API 모듈
    implementation 'org.slf4j:slf4j-api:2.0.9'
    testImplementation 'org.slf4j:slf4j-api:2.0.9'

    // Logback Classic 구현 (SLF4J의 구현체)
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    testImplementation 'ch.qos.logback:logback-classic:1.4.14'

    // SnakeYAML
    implementation 'org.yaml:snakeyaml:2.2'
    testImplementation 'org.yaml:snakeyaml:2.2'

    // OpenCV
    implementation 'org.openpnp:opencv:4.9.0-0'
    // Tesseract
    implementation 'net.sourceforge.tess4j:tess4j:5.11.0' // 버전은 사용 가능한 최신 버전으로 조정
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.register('cucumberRun') {
    dependsOn assemble, testClasses
    doLast {
        javaexec {

            main = 'io.cucumber.core.cli.Main'
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--glue', 'kro.kr.tbell.stepdefinitions',
                    'classpath:features',
                    '--plugin', 'pretty',
                    '--plugin', 'html:build/cucumber-report.html'
            ]
        }
    }
}